{
    "semantics": "mealy",
    "inputs": ["drive", "indicatingRight", "pastCrossing"],
    "outputs": ["go"],
    "assumptions": [
        "((X (drive && indicatingRight && !pastCrossing)) || (X (drive && !indicatingRight && !pastCrossing)))",
        "G ((drive && !pastCrossing && !indicatingRight) -> X (pastCrossing && !drive && !indicatingRight))",
        "G ((drive && indicatingRight) -> F(pastCrossing))",
        "G (pastCrossing -> !drive && !indicatingRight)",
        "!drive && !indicatingRight && !pastCrossing",
    ],
    "guarantees": [
        "F go",
        "G (go -> (indicatingRight || pastCrossing))",
    ],
}

